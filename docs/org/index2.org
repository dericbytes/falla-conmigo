#+TITLE: Org Publish Setup 



* Convert org file to an html file

  Aqui configuro opciones para publicar aglunos archivos escrito
  in formato de org-mode, como paginas web in mi pagina web.

  He dado el nombre 'falla-conmigo-github' a las opciones associated
  con mi reglas de exportar para mi pagina web.

  *:base-directory* - los archivos bajo esta carparta son
  associated con este projecto.

  *:publishing-directory* - el path relativo de archives de
  base-directory sera movido, a esta directorio, mantiendo su ruta
  relativa.

  *:with-toc* - si quieres anadir una tabla de contenido a los archivos exportados

  *:html-postamble* - si quieres anadir su propio pie de pagina

  #+begin_src emacs-lisp :results code
   ("falla-conmigo-github"
    :base-directory "~/wd/falla-conmigo/docs/org/"
    :publishing-directory "~/wd/falla-conmigo/docs"
    :publishing-function org-html-publish-to-html
    :section-numbers nil
    :html-postamble (lambda (&rest ignore)
		      (format "
	<div class=\"footerDate\">
	<p class=\"date\">
	Last edit: %s %s
	</p>
	</div>
	" (today) (now)))
    :with-toc nil
    :html-head "<link rel=\"stylesheet\"
	href=\"css/main.css\"
	type=\"text/css\"/>")
  #+end_src

  Tienes que anadir sus reglas de proyecto a org-publish-project-alist

  #+begin_src emacs-lisp :results code
   (setq org-publish-project-alist
	 '(("falla-conmigo-github"
	    :base-directory "~/wd/falla-conmigo/docs/org/"
	    :publishing-directory "~/wd/falla-conmigo/docs"
	    :publishing-function org-html-publish-to-html
	    :section-numbers nil
	    :html-postamble (lambda (&rest ignore)
			      (format "
     <div class=\"footerDate\">
     <p class=\"date\">
     Last edit: %s %s
     </p>
     </div>
     " (today) (now)))
	    :with-toc nil
	    :html-head "<link rel=\"stylesheet\"
     href=\"css/main.css\"
     type=\"text/css\"/>")
	   ("html"
	    :base-directory "~/org/"
	    :base-extension "org"
	    :publishing-directory "~/org/exports"
	    :publishing-function org-publish-org-to-html)
	   ("pdf"
	    :base-directory "~/org/"
	    :base-extension "org"
	    :publishing-directory "~/org/exports"
	    :publishing-function org-publish-org-to-pdf)
	   ("all" :components ("html" "pdf"))))
  #+end_src

  puedes publicar el buffer actual usando

  #+begin_src emacs-lisp :results code
   M-x org-publish-current-file
  #+end_src

  puedes publicar el proyecto entero usando

  #+begin_src emacs-lisp :results code
   M-x org-publish-project RET falla-conmigo-github
  #+end_src


  Tambien ver:
  - org-export-dispatch - selectionar que methodo a usar para
    convertir el buffer
  - org-html-export-as-html - convertir buffer a html y mostrar en
    nuevo buffer
  - org-html-export-to-html - convertir buffer a html y escribir a un
    archive de .html con la misma nomber in la misma directorio

  Articulos que lee:
  - [[https://gist.github.com/dashohoxha/5981222][web: gist.github.com - Dashohoxha: 5981222]]
  - [[https://stackoverflow.com/questions/9559753/emacs-org-mode-export-to-another-directory][stackoverflow: Emacs Org-mode - Export to another directory?]]



* css
  
  [[https://orgmode.org/manual/CSS-support.html][Official Docs: Css]]
